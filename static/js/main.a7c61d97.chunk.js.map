{"version":3,"sources":["components/Race.js","HOC/LoaderHOC.js","components/Table.js","components/Header.js","components/RaceInfo.js","App.js","index.js"],"names":["Race","handleClick","_this","props","onRaceClick","round","_this$props","this","raceName","Circuit","url","react_default","a","createElement","className","onClick","Component","LoaderHOC","WrappedComponent","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","isLoading","data","inherits","createClass","key","value","yearReady","roundReady","map","item","index","react","components_Race","assign","Header","state","yearOptions","handleChange","e","onChangeYear","target","years","i","Date","getFullYear","push","toString","setState","onChange","year","selected","date","Results","console","log","href","circuitName","id","style","color","car","Driver","position","Constructor","FastestLap","laps","givenName","familyName","nationality","name","undefined","Time","time","INITIAL_STATE","selectedRound","season","RaceTable","Races","App","updateRound","newRound","prevState","objectSpread","getRoundData","updateYear","newYear","getSeasonData","fetch","then","res","json","MRData","components_Header","components_Table","display","components_RaceInfo","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a7c61d97.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Race extends Component {\n  handleClick = () => {\n    this.props.onRaceClick(this.props.round);\n  };\n  render() {\n    let { raceName, round, Circuit, url } = this.props;\n    return (\n      <div className=\"listedRace\" onClick={this.handleClick}>\n        <h4 className=\"\">\n          {round}: {raceName}\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default Race;\n","import React, { Component } from \"react\";\n\nconst LoaderHOC = WrappedComponent => {\n  return class LoaderHOC extends Component {\n    isLoading = () => {\n      return (\n        (this.props.data && this.props.data.length > 0) || this.props.Circuit\n      );\n    };\n    render() {\n      if (this.props.yearReady === \"start\") {\n        return <h2>Select a Championship Year</h2>;\n      }\n      if (this.props.roundReady === \"start\") {\n        return <h2>Select a Championship Round</h2>;\n      }\n\n      return !this.isLoading() ? (\n        <h2>Loading your data</h2>\n      ) : (\n        <WrappedComponent {...this.props} />\n      );\n    }\n  };\n};\n\nexport default LoaderHOC;\n","import React, { Fragment } from \"react\";\nimport Race from './Race'\nimport LoaderHOC from '../HOC/LoaderHOC'\n\nconst Table = props => {\n  return (\n    <div className=\"list\">\n      {props.data.map((item, index) => {\n        return <Fragment key={index}><Race {...item} onRaceClick={props.onRaceClick}/></Fragment>;\n      })}\n    </div>\n  );\n};\n\nexport default LoaderHOC(Table);\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  state = {\n    yearOptions: []\n  };\n\n  componentDidMount() {\n    let years = [];\n    for (let i = 1950; i <= new Date().getFullYear()-1; i++) {\n      years.push(i.toString());\n    }\n    this.setState({ yearOptions: years });\n  }\n\n  handleChange = e => {\n    this.props.onChangeYear(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"title\">\n        <h1>Formula 1</h1>\n        <select onChange={this.handleChange}>\n          {this.state.yearOptions.map(year => {\n            return <option>{year}</option>;\n          })}\n          <option selected>Please select a year</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport LoaderHOC from \"../HOC/LoaderHOC\";\n\nconst RaceInfo = props => {\n  let { raceName, date, Circuit, Results, round } = props;\n  (function() {\n    if (Circuit) {\n      console.log(Circuit);\n    }\n  })();\n  return (\n    <div className=\"race raceDisplay\">\n      <div className=\"raceFactsDisplay\">\n        <h2>Championship Round {round}</h2>\n        <h3>{raceName}</h3>\n        <h4>{date}</h4>\n        <h4>\n          Location: <a href={Circuit.url}>{Circuit.circuitName}</a>\n        </h4>\n      </div>\n      <div className=\"resultsDisplay\">\n        <h3>Results</h3>\n        <table id=\"resultTable\">\n          <tr style={{ color: \"black\" }}>\n            <th>Position</th>\n            <th>Name</th>\n            <th>Nationality</th>\n            <th>Team</th>\n            <th>Laps</th>\n            <th>Fastest Lap</th>\n          </tr>\n          {Results.map((car, index) => {\n            let { Driver, position, Constructor, FastestLap, laps } = car;\n            return (\n              <tr key={index}>\n                <th>{position}</th>\n                <th>\n                  {Driver.givenName} {Driver.familyName}\n                </th>\n                <th>{Driver.nationality}</th>\n                <th>{Constructor.name}</th>\n                <th>{laps}</th>\n                <th>\n                  {FastestLap != undefined ? FastestLap.Time.time : \"n/a\"}\n                </th>\n              </tr>\n            );\n          })}\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default LoaderHOC(RaceInfo);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Table from \"./components/Table\";\nimport Race from \"./components/Race\";\nimport Header from \"./components/Header\";\nimport RaceInfo from \"./components/RaceInfo\";\n\nconst INITIAL_STATE = {\n  year: \"start\",\n  round: \"start\",\n  selectedRound: {},\n  season: {\n    RaceTable: {\n      Races: []\n    }\n  }\n};\n\nclass App extends Component {\n  state = { ...INITIAL_STATE };\n\n  updateRound = newRound => {\n    this.setState(prevState => {\n      return Object.assign(\n        {},\n        { ...INITIAL_STATE },\n        { year: prevState.year, season: prevState.season, round: newRound }\n      );\n    }, this.getRoundData);\n  };\n\n  updateYear = newYear => {\n    this.setState(\n      Object.assign({}, { ...INITIAL_STATE }, { year: newYear }),\n      this.getSeasonData\n    );\n  };\n\n  getRoundData = () => {\n    fetch(\n      `http://ergast.com/api/f1/${this.state.year}/${\n        this.state.round\n      }/results.json`\n    )\n      .then(res => res.json())\n      .then(data =>\n        this.setState({ selectedRound: data.MRData.RaceTable.Races[0] })\n      );\n  };\n\n  getSeasonData = () => {\n    fetch(`http://ergast.com/api/f1/${this.state.year}.json`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ season: data.MRData });\n        this.getRoundData();\n      });\n  };\n\n  componentDidMount() {\n    this.getSeasonData();\n    this.getRoundData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header year={this.state.year} onChangeYear={this.updateYear} />\n        <Table\n          yearReady={this.state.year}\n          onRaceClick={this.updateRound}\n          data={this.state.season.RaceTable.Races}\n          display={Race}\n        />\n        <RaceInfo {...this.state.selectedRound} roundReady={this.state.round} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}